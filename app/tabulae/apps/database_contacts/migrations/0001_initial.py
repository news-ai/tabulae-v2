# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-25 17:05
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('given_name', models.TextField(blank=True, default=b'')),
                ('full_name', models.TextField(blank=True, default=b'')),
                ('family_name', models.TextField(blank=True, default=b'')),
                ('websites', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DatabaseContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('to_update', models.BooleanField(default=False)),
                ('is_outdated', models.BooleanField(default=False)),
                ('full_contact', models.BooleanField(default=False)),
                ('clear_bit', models.BooleanField(default=False)),
                ('contact_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database_contacts.ContactInfo')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'database-contacts',
            },
        ),
        migrations.CreateModel(
            name='DigitalFootprint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'digital-footprints',
            },
        ),
        migrations.CreateModel(
            name='LocationDeduced',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('normalized_location', models.TextField(blank=True, default=b'')),
                ('deduced_location', models.TextField(blank=True, default=b'')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.TextField(blank=True, default=b'')),
                ('title', models.TextField(blank=True, default=b'')),
                ('start_date', models.TextField(blank=True, default=b'')),
                ('end_date', models.TextField(blank=True, default=b'')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('url', models.URLField(blank=True, default=b'')),
                ('type_id', models.TextField(blank=True, default=b'')),
                ('is_primary', models.BooleanField(default=False)),
                ('photo_type', models.TextField(blank=True, default=b'')),
                ('type_name', models.TextField(blank=True, default=b'')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('score_type', models.TextField(blank=True, default=b'')),
                ('value', models.TextField(blank=True, default=b'')),
                ('provider', models.TextField(blank=True, default=b'')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'scores',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('value', models.TextField(blank=True, default=b'')),
                ('provider', models.TextField(blank=True, default=b'')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'topics',
            },
        ),
        migrations.CreateModel(
            name='Demographic',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('location_deduced', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='database_contacts.LocationDeduced')),
                ('gender', models.TextField(blank=True, default=b'')),
                ('location_general', models.TextField(blank=True, default=b'')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='locationdeduced',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='digitalfootprint',
            name='scores',
            field=models.ManyToManyField(blank=True, related_name='_digitalfootprint_scores_+', to='database_contacts.Score'),
        ),
        migrations.AddField(
            model_name='digitalfootprint',
            name='topics',
            field=models.ManyToManyField(blank=True, related_name='_digitalfootprint_topics_+', to='database_contacts.Topic'),
        ),
        migrations.AddField(
            model_name='databasecontact',
            name='digital_footprint',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database_contacts.DigitalFootprint'),
        ),
        migrations.AddField(
            model_name='databasecontact',
            name='organizations',
            field=models.ManyToManyField(blank=True, related_name='_databasecontact_organizations_+', to='database_contacts.Organization'),
        ),
        migrations.AddField(
            model_name='databasecontact',
            name='photos',
            field=models.ManyToManyField(blank=True, related_name='_databasecontact_photos_+', to='database_contacts.Photo'),
        ),
        migrations.AlterUniqueTogether(
            name='topic',
            unique_together=set([('value', 'provider')]),
        ),
    ]
